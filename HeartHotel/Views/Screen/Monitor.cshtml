@{
    Layout = "~/Views/Shared/_LayoutFull.cshtml";
    ViewData["Title"] = "Screen Monitor";
}

@* <h4 class="section-title">
    @ViewBag.title
</h4> *@

<div class="d-flex flex-column justify-content-center align-items-center vh-100">
    <div id="content" class="w-100 text-center fw-bold text-truncate adjustFontSizeToFit"
        style="font-size: 100px !important;"></div>
    <i id="icon" class="" style="font-size: 20rem;"></i>
    <img src="" class="d-none" />
</div>

@section scripts {
    <script src="~/lib/microsoft-signalr/6.0.0/signalr.min.js"></script>
    <script src="~/js/show.js" asp-append-version="true"></script>
    <script>
        $(document).ready(function () {
            $('#content').html('@ViewBag.content');

            $('#icon').removeClass();
            $('#icon').addClass(`fa-solid fa-arrow-@ViewBag.icon`);

            adjustFontSizeToFit();
            // let adjTimer = setInterval(function () {
            //     adjustFontSizeToFit();
            //     clearInterval(adjTimer);
            //     console.log("Font size adjusted");
            // }, 600);

            // SignalR connection setup
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/signalrHub")
                .build();

            connection.on("OnConnected", (connectionId) => {
                // console.log("Connected with ID:", connectionId);
                $.post(`/api/SignalR/group/add/${connectionId}/monitor1`)
                    .done(function (response) {
                        console.log("Connection ID added to a group");
                    })
                    .fail(function (error) {
                        console.error("Error sending connection ID to server:", error);
                    });
            });

            connection.start()
                .then(() => console.log("Connection started"))
                .catch(err => console.error("Error while starting connection:", err));

            connection.on("ReceiveMessage", function (message) {
                console.log("New message received: ", message);
                @* $('#content').html(message.split('_')[0])

                $('#icon').removeClass();
                $('#icon').addClass(`fa-solid fa-arrow-${message.split('_')[1]}`);

                adjustFontSizeToFit(); *@
                    window.location.href = `/Monitor1/?Content=${message}`;
            });

            connection.onclose(() => {
                reconnectTimer = setInterval(() => {
                    connection.start()
                        .then(() => {
                            console.log("Reconnected");
                            clearInterval(reconnectTimer); // Stop the timer once reconnected
                        })
                        .catch(err => console.error("Error while reconnecting:", err));
                }, 5000); // Retry every 5 seconds
            });
        });

        // اجرا هنگام بارگذاری صفحه و تغییر اندازه صفحه
        document.addEventListener('DOMContentLoaded', () => adjustFontSizeToFit());
        window.addEventListener('resize', () => adjustFontSizeToFit());
    </script>
}